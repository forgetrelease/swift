// RUN: %empty-directory(%t)
// RUN: %target-swift-frontend %s -emit-module -o %t/tmp.swiftmodule
// RUN: %target-sil-opt %t/tmp.swiftmodule -emit-sorted-sil | %FileCheck %s

sil [serialized] [dynamically_replacable] @test_dynamically_replacable : $@convention(thin) () -> () {
bb0:
  %0 = tuple ()
  return %0 : $()
}

sil [serialized] [dynamic_replacement_for "test_dynamically_replacable"] @test_dynamic_replacement_for : $@convention(thin) () -> () {
bb0:
  %0 = prev_dynamic_function_ref @test_dynamic_replacement_for : $@convention(thin) () -> ()
  %1 = apply %0() : $@convention(thin) () -> ()
  %2 = tuple ()
  return %2 : $()
}

sil [serialized] @test_dynamically_replacable_impl : $@convention(thin) () -> () {
bb0:
  %0 = dynamic_function_ref @test_dynamically_replacable : $@convention(thin) () -> ()
  %1 = apply %0() : $@convention(thin) () -> ()
  %2 = tuple ()
  return %2 : $()
}

// CHECK-LABEL: sil [serialized] [dynamic_replacement_for "test_dynamically_replacable"] [canonical] @test_dynamic_replacement_for
// CHECK: prev_dynamic_function_ref @test_dynamic_replacement_for

// CHECK-LABEL: sil [serialized] [dynamically_replacable] [canonical] @test_dynamically_replacable

// CHECK-LABEL: sil [serialized] [canonical] @test_dynamically_replacable_impl
// CHECK:  dynamic_function_ref @test_dynamically_replacable
